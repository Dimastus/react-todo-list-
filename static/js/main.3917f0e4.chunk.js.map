{"version":3,"sources":["components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/todo-input/index.js","components/todo-input/todo-input.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/todo-header/index.js","components/todo-header/todo-header.js","App.js","index.js"],"names":["TodoListItem","_this$props","this","props","label","id","onDeleted","onToggleImportant","onToggleDone","classNames","important","done","react_default","a","createElement","key","className","onClick","Component","TodoList","todos","map","item","itemProps","Object","objectWithoutProperties","components_todo_list_item","assign","result","getItems","TodoInput","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","e","_this2","onSearch","setState","target","value","toLowerCase","_this3","onFilterChange","type","name","placeholder","onChange","onLabelChange","bind","_ref","filter","ItemAddForm","preventDefault","addItem","onSubmit","TodoHeader","toDo","App","items","term","idx","findIndex","el","toConsumableArray","slice","concat","text","obj","length","_ref2","newArray","push","console","log","arr","propName","oldItem","newItems","objectSpread","defineProperty","_ref3","toggleProperty","_ref4","_this$state","includes","_this$state2","doneCount","todoCount","visible","filterSearchItems","Fragment","components_todo_header","components_todo_input","components_todo_list","components_item_add_form","onAdded","React","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.3917f0e4.chunk.js","sourcesContent":["import TodoListItem from './todo-list-item';\r\nexport default TodoListItem;","import React, { Component } from 'react';\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n    render() {\r\n        let { label,\r\n              id,\r\n              onDeleted,\r\n              onToggleImportant,\r\n              onToggleDone,\r\n              important,\r\n              done } = this.props;\r\n        let classNames = '';\r\n\r\n        if (important) {\r\n            classNames += ' mainLine'\r\n        } else {\r\n            classNames += ''\r\n        }\r\n\r\n        if (done) {\r\n            classNames += ' done'\r\n        } else {\r\n            classNames += ''\r\n        }\r\n\r\n        return (\r\n            <li>\r\n                <span\r\n                    key={id}\r\n                    className={classNames}\r\n                    onClick={onToggleDone} >\r\n                    {label}\r\n                </span>\r\n                <span className=\"btn-group\">\r\n                    <button onClick={onDeleted} className=\"btn btn-outline-danger\">&times;</button>\r\n                    <button onClick={onToggleImportant} className=\"btn btn-outline-warning\">!</button>\r\n                </span>\r\n            </li>\r\n        );\r\n    }\r\n}","import TodoList from './todo-list';\r\nexport default TodoList;","import React, { Component } from 'react';\r\nimport TodoListItem from \"../todo-list-item\";\r\nimport './todo-list.css';\r\n\r\nexport default class TodoList extends Component {\r\n    getItems() {\r\n        let { todos, onDeleted, onToggleImportant, onToggleDone } = this.props;\r\n\r\n        return todos.map(item => {\r\n            let { id, ...itemProps } = item;\r\n\r\n            return (\r\n                <TodoListItem\r\n                    key={id}\r\n                    {...itemProps}\r\n                    onDeleted={() => onDeleted(id)}\r\n                    onToggleDone={() => onToggleDone(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)} />\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let result = this.getItems();\r\n\r\n        return (\r\n            <ul>{result}</ul>\r\n        );\r\n    }\r\n}","import TodoInput from './todo-input';\r\nexport default TodoInput;","import React, { Component } from 'react';\r\nimport './todo-input.css';\r\n\r\nexport default class TodoInput extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { label: '' };\r\n    }\r\n\r\n    onLabelChange(e) {\r\n        let { onSearch } = this.props;\r\n\r\n        this.setState({\r\n            label: e.target.value\r\n        }, () => {\r\n            onSearch(this.state.label.toLowerCase());\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let buttons = [\r\n            { name: 'all', label: 'All' },\r\n            { name: 'active', label: 'Active' },\r\n            { name: 'done', label: 'Done' },\r\n        ];\r\n        let { onFilterChange } = this.props;\r\n\r\n        return (\r\n            <div className=\"block-item-search\">\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"todo-input\"\r\n                    id=\"todo-input\"\r\n                    placeholder=\"enter item for search\"\r\n                    className=\"todo-input\"\r\n                    onChange={this.onLabelChange.bind(this)} />\r\n                <span className=\"btn-group mr-md-2 mb-2 mb-md-0\">\r\n                    {\r\n                        buttons.map(({name, label}) => {\r\n                            return (\r\n                                <button\r\n                                    key={name}\r\n                                    className={this.props.filter === name ? 'btn btn-primary' : 'btn btn-outline-primary'}\r\n                                    onClick={() => onFilterChange(name)} >\r\n                                    {label}\r\n                                </button>);\r\n                        })\r\n                    }\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}","import ItemAddForm from './item-add-form';\r\nexport default ItemAddForm;","import React, { Component } from 'react';\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { label: '' };\r\n    }\r\n\r\n    onLabelChange(e) {\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.addItem(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmit.bind(this)} className=\"form-item-add\">\r\n                <input\r\n                    type='text'\r\n                    className='input-add-form'\r\n                    placeholder=\"enter item for added\"\r\n                    onChange={this.onLabelChange.bind(this)}\r\n                    value={this.state.label} />\r\n                <button className='btn btn-outline-primary'>\r\n                    Add item\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}","import TodoHeader from './todo-header';\r\nexport default TodoHeader;","import React, { Component } from 'react';\r\nimport './todo-header.css';\r\n\r\nexport default class TodoHeader extends Component {\r\n    render() {\r\n        let { toDo, done } = this.props;\r\n\r\n        return (\r\n            <div className='block-progress-task'>\r\n                <span className=\"tasks-in-progress\">{ toDo } to do,</span>\r\n                <span className=\"tasks-done\"> { done } done</span>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport TodoList from './components/todo-list';\r\nimport TodoInput from './components/todo-input';\r\nimport ItemAddForm from './components/item-add-form';\r\nimport TodoHeader from './components/todo-header';\r\n\r\nexport default class App extends React.Component {\r\n    state = {\r\n        items: [\r\n            { 'label': 'Drink Coffee', important: false, id: 1, done: false },\r\n            { 'label': 'Make awesome app', important: true, id: 2, done: true },\r\n            { 'label': 'Study React', important: false, id: 3, done: false },\r\n            { 'label': 'Study JavaScript and other', important: false, id: 4, done: false }\r\n        ],\r\n        term: '',\r\n        filter: 'all'\r\n    };\r\n\r\n    onDeleted(id) {\r\n        this.setState(({ items }) => {\r\n            const idx = items.findIndex(el => el.id === id);\r\n            return { items: [...items.slice(0, idx), ...items.slice(idx + 1)] };\r\n        });\r\n    }\r\n\r\n    onAdded(text) {\r\n        let obj = {\r\n            'label': text,\r\n            important: false,\r\n            done: false,\r\n            id: this.state.items.length + 1\r\n        };\r\n\r\n        this.setState(({ items }) => {\r\n            let newArray = [].concat(items);\r\n            newArray.push(obj);\r\n\r\n            return {\r\n                items: newArray\r\n            };\r\n        });\r\n\r\n        console.log(this.state);\r\n    }\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex(el => el.id === id);\r\n        let oldItem = arr[idx];\r\n        let newItems = { ...arr[idx], [propName]: !oldItem[propName] };\r\n        return [\r\n            ...arr.slice(0, idx),\r\n            newItems,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n    }\r\n\r\n    onToggleImportant(id) {\r\n        this.setState(({ items }) => {\r\n            return {\r\n                items: this.toggleProperty(items, id, 'important')\r\n            }\r\n        });\r\n    }\r\n\r\n    onToggleDone(id) {\r\n        this.setState(({ items }) => {\r\n            return {\r\n                items: this.toggleProperty(items, id, 'done')\r\n            };\r\n        });\r\n    }\r\n\r\n    onSearch(term) {\r\n        this.setState({ term });\r\n    }\r\n\r\n    filterSearchItems() {\r\n        let { items, term } = this.state;\r\n\r\n        if (!term) {\r\n            return items;\r\n        }\r\n        return items.filter(el => el.label.toLowerCase().includes(term));\r\n    }\r\n\r\n    filter(arr, name) {\r\n        switch (name) {\r\n            case 'all':\r\n                return arr;\r\n            case 'active':\r\n                return arr.filter(el => !el.done);\r\n            case 'done':\r\n                return arr.filter(el => el.done);\r\n            default:\r\n                return arr;\r\n        }\r\n    }\r\n\r\n    onFilterChange(filter) {\r\n        this.setState({ filter });\r\n    }\r\n\r\n    render() {\r\n        const { items, filter } = this.state;\r\n        const doneCount = items.filter(el => el.done).length;\r\n        const todoCount = items.length - doneCount;\r\n        const visible = this.filter(this.filterSearchItems(), filter);\r\n\r\n        return (\r\n            <>\r\n                <h1>React ToDo List</h1>\r\n                <div className=\"container\">\r\n                    <TodoHeader\r\n                        toDo={todoCount}\r\n                        done={doneCount} />\r\n                    <TodoInput\r\n                        onSearch={this.onSearch.bind(this)}\r\n                        onFilterChange={this.onFilterChange.bind(this)}\r\n                        filter={filter} />\r\n                    <TodoList\r\n                        todos={visible}\r\n                        onDeleted={this.onDeleted.bind(this)}\r\n                        onToggleDone={this.onToggleDone.bind(this)}\r\n                        onToggleImportant={this.onToggleImportant.bind(this)} />\r\n                    <ItemAddForm\r\n                        addItem={this.onAdded.bind(this)} />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}